
Automate fini(nombre fini détats) finite state machine:
est un modèle mathématique de calcul, utilisé
dans de nombreuses circomstances, allant de la conception
de programmes informatiques et de circuit en logique séquentielle
aux applications dans les protocoles de communication, en passant par le controle de processus.

Un automate fini est un construction abstraite, susceptible d'étre dans
un nombre fini d'états, mais à un moment donné est dans un seul état à la fois (l'état courant).

Le passage d'un état à un autre est appelé une transistion et est déclencher
par un évènement ou une condition.

Un automate particulier est décrit par l'ensemble de ses états et l'ensemble de ses transitions.

On rencontre couramment des automates finis dans de nombreux appareils qui réalisent des actions déterminées
en fonction des évènement qui se présentent.
 Ex distrubuteur aumatique / feux / digicodes

 Un automate fini à une mémoire limitée à son nombres d'états.

 modélisation de l'état sous la forme de graphe orienté.



État courant	 Entrée	    État suivant	       Sortie

verrouillé	    jeton	   déverrouillé	   Déverrouille le portillon pour qu'un usager puisse passer
                pousser	  verrouillé	         Rien
déverrouillé	  jeton	   déverrouillé	         Rien
                pousser	   verrouillé	 Quand l'usager est passé, verrouille le portillon



Un état est la description de la configuration d'un système en attente d'exécuter une transition.

Une transition est un ensemble d'actions à executer condition est remplie ou lorsqu'on événement est reçu.

actions à un état:
-action d'entrée : réalisée lorsque l'on entre dans l'état,
-action de sortie : réalisé lorsque l'on quitte l'état.
-action de transition réaliser lors d'une transition.

UML : unified modeling languages

SDL : Specifiaction and Description Langage

action dans une transition:*
- envoie d'un message
- reception d'un message
- démarrage d'un temporisateur
- arrêt d'un temporisateur
- lancement d'une machine concurrente
- prise de décision

En info, les automates finis sont largement utilisés en modélisation du copmportement
d'applications, en conception matérielle.

Les dictionnaires linguistiques aussi peuvent être représentés par un automate fini.

## Classification

Les automates finis peuvent être classés prinpalement en deux catégories:
 - les accepteurs qui analysent la structure de la donnée fournie,
 et l'acceptent si elle comforme à la spécification décrite par l'automate.
 - les transducteurs au contraire traduisent une chaîne de symboles en une autre,
 là encore selon l'algorithme codé dans l'automate.

 classificateur ou séquenceurs.


 Les accepteurs : produisent une sortie binaire
 indiquant si l'entrée recue est acceptée ou non.

L'entrée est généralement une suite de symboles,
il n'y a pas d'actions associées.

Une machine peut être décrite comme définissant un langage formel.
Ce langage est composé des mots acceptés par la machine, et d'aucun mot rejeté par elle.
Par définition, les langages acceptés par un automate fini sont appelés les langages reconnaissables.
Par le théorème de Kleene, ce sont les langages réguliers ou rationnels, décrits par des expressions régulières ou rationnelles.

Le problème de déterminer le langage accepté par un automate fini donné est une instance
d'un problème appelé le problème algébrique de cheminement.

### Etat initial
il est généralement representé par une flêche qui pointe vers cette état.


###  Etat d'acception finaux ou terminaux

Un état d'acception est un état dans lequel la machine déclare que la chaine d'entrée traitée
jusqu'alors appartient au langage qu'elle reconnait.

L'état initial peut être aussi être un état final; dans ce cas, l'automate accepte
la chaine vide.

L'automate est determiste car termine.


### Transducteurs

Les transducteurs finis génèrent en sortie des mots en fonction d'un mot
d'entrée donné et d'actions associées aux états.

2 types :
Les Machine de Moore et les machines de Mealy


Moore:

Dans le modèle de Moore, qui utilise seulement des actions d'entrée,
la sortie dépend uniquement de l'état courant.

Facilité?


Melay:

Dans le modèle de Mealy, qui utilise également des actions d'entrée,
la sortie dépend à la fois de l'entrée et de l'état.
L'usage de machines de Mealy réduit souvent le nombre d'état.


## Variantes

Classificateur = accepteur avec + de 2 terminaux.

Automates combinatoires.


## Determinisme

Dans un automate déterministe, chaque état possède au plus une transition pour chaque symbole d'entrée
(et même exactement une dans le cas où l'automate est complet).


## Modèle mathématique

Les définitions formelles sont les suivantes:

Un automate fini deterministe A = (E, S, so, G, F) est composé de :
- E un ensemble fini, non vide de lettres qui est l'alphabet d'entrée,
- S un ensemble fini non vide d'états,
- so l'état initial, élément de S. Dans un automate non déterministe so peut être un ensemble d'états.
- G la fonction de transition d'états G: S x E -> S
( dans un automate non déterministe, c'est une fonction
  G : S x E -> B(S), donc à valeur dans l'ensemble des parties de S, en d'autre termes G retourne ensemble d'états)
- F est l'ensemble des états terminaux, un sous-ensemble (eventuellement vide) de S

soit G la fonction partielle q C S et a C E. Si G(q,a) n'est pas défini, l'automate signal une erreur.


Un automate fini est une machine de Turing très particulière, ou la tête ne peut effectuer
que des opérations de lecture (pas d'écriture), et de plus se déplace toujours de gauche vers la droite (pas de retour en arrière).


Un transducteur fini T = (E, T, S, so, G, w) est composé de:
- E un ensemble fini, non vide de lettres qui est l'alphabet d'entrée.
- T un ensemble fini, non vide de lettres qui est l'alphabet de sortie.
- S un ensemble fini non vide d'états.
- so l'état initial, élément de S. Dans un automate non déterministe, so peut être un ensemble d'états.
- G est la fonction de transition d'états G(S x E) -> S.
- w est la fonction de sortie.

Si la fonction de sortie est la fonction des états et de l'entrée (w: S x E -> T)
la définition correspond à celle du modèle de Mealy.
Si en revanche la sortie ne dépend que de l'état (w : S -> T), on est présence du modèle de Moore.

Il n'est pas difficile de transformer un automate de Moore en un automate de Mealy en faisant
ne dépendre la fonction de sortie que de l’état d'arrivée.
La conversion réciproque, d'un automate de Mealy en un automate de Moore, est également possible,
mais demande d'introduire des états supplémentaires.

## Optimisation

L'optimisation d'un automate fini signifie ici la recherche d'un automate fini déterministe
avec le moins d'états réalisant la même fonction.

L'algorithme le plus rapide est l'algorithme de Hopcroft datant de 1971.
D'autres techniques sont l'algorithme de Moore et un algorithme de Brzozowski.
